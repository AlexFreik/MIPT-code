#-------------------------------------------------------------------

'''
A. Проверка на дубликаты
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Вам дана строка с символами. Проверьте, что в строке нет 
дублирующихся символов. Мы считаем, что строка содержит дублирующиеся
символы, если в строке существует по крайней мере один символ,
который встречается в любых местах в строке два раза и более

Важно: пробел и прочие знаки препинания считаются символами

Формат ввода
Строка через стандартный ввод

Формат вывода
True, если в строке нет дубликатов, иначе False

Пример 1
Ввод	Вывод
qwerty
True
Пример 2
Ввод	Вывод
qwertty
False
Примечания
Джедаи Python в первой строке решения задачи считывают данные,
а во второй генерируют и выводят ответ. Постарайтесь и вы,
используя пройденные на семинаре контейнеры Python, написать решение в две строки

Магистры-джедаи Python могут решить эту задачу в одну строку 
(с той или иной степенью красоты). Но поговоаривают, что это путь на Темную Сторону.
'''
import collections
print(collections.Counter(input()).most_common(1)[0][1] <= 1)

#-------------------------------------------------------------------

'''B. Минимальная подстрока
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
На вход подается строка. Необходимо посчитать для каждого входящего в нее символа длину наибольшей подстроки, состоящей только из этого символа

Формат ввода
Одна строка с текстом

Формат вывода
Нужно вывести N строк, где N - количество различных символов в строке. Строки должны располагаться в лексикографическом порядке соответствующего символа.

В каждой из строк сначала должен идти символ, для которого она пишется, затем через пробел - длина максимальной подстроки с этим символом.

Пример 1
Ввод	Вывод
correct your mistakes
  1
a 1
c 1
e 1
i 1
k 1
m 1
o 1
r 2
s 1
t 1
u 1
y 1
Пример 2
Ввод	Вывод
bee gees
  1
b 1
e 2
g 1
s 1
'''
s = input()
if s:
    char_list = [[chr(x), int(0)] for x in range(1000)]
    prev = s[0]
    s = s[1:]
    char_list[ord(prev)][1] += 1
    cnt = 1
    for c in s:
        if prev == c:
            cnt += 1
            char_list[ord(prev)][1] = cnt
        else:
            prev = c
            if char_list[ord(prev)][1] == 0:
                char_list[ord(prev)][1] += 1
            cnt = 1
    for i in char_list:
        if i[1]:
            print(str(i[0]) + ' ' + str(i[1]))

#-------------------------------------------------------------------

'''
C. Пропускная система
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
В офисном здании проводят пожарные учения.

Сотрудники отдела безопасности хотят узнать, есть ли в здании люди. Для этого они хотят посмотреть логи пропускной системы, которая записывает все факты прикладывания пропусков сотрудники. Но, к сожалению, из-за ошибки в работе системы они не знают, входил человек или выходил. К счастью, так как офис на ночь закрывается и всех сотрудников выгоняют, можно восстановить эту информацию.

Так же они хотят найти лучший и худший момент времени для проведения учений:

- Лучшим моментом считается тот, в котором в здании было максимальное число сотрудников

- Худшим моментом считается самый первый момент (кроме начала дня), когда в здании нет сотрудников

Формат ввода
В одной строке через пробел передаются числа, которые соотвествуют ID приложенного пропуска в хронологическом порядке

Формат вывода
Через пробел выведите следующее:

1. True, если сейчас в здании не осталось ни одного человека, False иначе.

2. Самый ранний (за исключением начала дня) момент времени, когда в 
здании не было сотрудников. Момент времени определяется количеством записи
в логе прямо перед ним. Например, начало дня - это 0, после прикладывания 
первого пропуска - 1 и т.д. Если такого момента нет, вывести 0.

3. Лучший момент для учений (если таких несколько, взять самый ранний).

Пример 1
Ввод	Вывод
1 2 2 1
True 4 2
Пример 2
Ввод	Вывод
3 4 3
False 0 2
Пример 3
Ввод	Вывод
3 4 3 3 4 3 4 4
True 6 2
Примечания
- Считаем, что в начала дня в офисе действительно нет людей

- Сотрудники не передают друг другу пропуски и никого не пропускают по своим

- Прикладывание пропуска означает проход через турникет (нельзя приложить, развернуться и уйти)
'''
input_s = input().split()
curr_people = set()
worse_time, best_time = 0, 0
max_people = 0
time_cnt = 0
for c in input_s:
    time_cnt += 1
    if int(c) not in curr_people:
        curr_people.add(int(c))
        if len(curr_people) > max_people:
            max_people = len(curr_people)
            best_time = time_cnt
    else:
        curr_people.discard(int(c))
        if worse_time == len(curr_people) == 0:
            worse_time = time_cnt
print(str(bool(not len(curr_people))) + ' ' +
      str(worse_time) + ' ' + str(best_time))

#-------------------------------------------------------------------

'''
D. WordCount
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Вам дана строка текста. Выведите число, равное отношению частоты самого частого слова из этой строки к общему числу слов в этой строке. Слова в строке раздедены пробелами, регистр букв не учитывается.

Формат ввода
Одна строка в стандартном вводе, которую можно считать напрямую с помощью функции input()

Формат вывода
Число, равное отношению частоты самого частого слова из этой строки к общему числу слов в этой строке.

Пример
Ввод	Вывод
test test all the files
0.4
'''
import collections

input_list = input().split()
print(collections.Counter(input_list).most_common(1)[0][1] / len(input_list))


#-------------------------------------------------------------------

'''
E. Упрт здч
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
На вход подаются два текста. Необходимо вывести первый, очищенный от всех символов, которые есть во втором.

Формат ввода
Две строки с текстом

Формат вывода
Одна строка с "исправленной версией" первого текста

Пример 1
Ввод	Вывод
my name is jonas
yesterday
m nm i jon

Пример 2
Ввод	Вывод
smells like teen spirit
welcome to the black parade
ss i n sii

Примечания
В данном задании нужно игнорировать пробелы в "фильтрующей" строке (см. примеры)
'''
input_1s = input()
input_2s = input()

filter_char_list = set()
for c in input_2s:
    filter_char_list.add(c)
filter_char_list.discard(' ')

ans_s = ""
for c in input_1s:
    if c not in filter_char_list:
        ans_s += c
print(ans_s)


